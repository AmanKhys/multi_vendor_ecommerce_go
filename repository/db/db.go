// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"
	"database/sql"
	"fmt"
)

type DBTX interface {
	ExecContext(context.Context, string, ...interface{}) (sql.Result, error)
	PrepareContext(context.Context, string) (*sql.Stmt, error)
	QueryContext(context.Context, string, ...interface{}) (*sql.Rows, error)
	QueryRowContext(context.Context, string, ...interface{}) *sql.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

func Prepare(ctx context.Context, db DBTX) (*Queries, error) {
	q := Queries{db: db}
	var err error
	if q.addAddressByUserIDStmt, err = db.PrepareContext(ctx, addAddressByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query AddAddressByUserID: %w", err)
	}
	if q.addAndVerifyUserStmt, err = db.PrepareContext(ctx, addAndVerifyUser); err != nil {
		return nil, fmt.Errorf("error preparing query AddAndVerifyUser: %w", err)
	}
	if q.addCartItemStmt, err = db.PrepareContext(ctx, addCartItem); err != nil {
		return nil, fmt.Errorf("error preparing query AddCartItem: %w", err)
	}
	if q.addCateogryStmt, err = db.PrepareContext(ctx, addCateogry); err != nil {
		return nil, fmt.Errorf("error preparing query AddCateogry: %w", err)
	}
	if q.addCouponStmt, err = db.PrepareContext(ctx, addCoupon); err != nil {
		return nil, fmt.Errorf("error preparing query AddCoupon: %w", err)
	}
	if q.addForgotOTPByUserIDStmt, err = db.PrepareContext(ctx, addForgotOTPByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query AddForgotOTPByUserID: %w", err)
	}
	if q.addOTPStmt, err = db.PrepareContext(ctx, addOTP); err != nil {
		return nil, fmt.Errorf("error preparing query AddOTP: %w", err)
	}
	if q.addOrderStmt, err = db.PrepareContext(ctx, addOrder); err != nil {
		return nil, fmt.Errorf("error preparing query AddOrder: %w", err)
	}
	if q.addOrderITemStmt, err = db.PrepareContext(ctx, addOrderITem); err != nil {
		return nil, fmt.Errorf("error preparing query AddOrderITem: %w", err)
	}
	if q.addPaymentStmt, err = db.PrepareContext(ctx, addPayment); err != nil {
		return nil, fmt.Errorf("error preparing query AddPayment: %w", err)
	}
	if q.addProductStmt, err = db.PrepareContext(ctx, addProduct); err != nil {
		return nil, fmt.Errorf("error preparing query AddProduct: %w", err)
	}
	if q.addProductToCategoryByCategoryNameStmt, err = db.PrepareContext(ctx, addProductToCategoryByCategoryName); err != nil {
		return nil, fmt.Errorf("error preparing query AddProductToCategoryByCategoryName: %w", err)
	}
	if q.addProductToCategoryByIDStmt, err = db.PrepareContext(ctx, addProductToCategoryByID); err != nil {
		return nil, fmt.Errorf("error preparing query AddProductToCategoryByID: %w", err)
	}
	if q.addSavingsToWalletByUserIDStmt, err = db.PrepareContext(ctx, addSavingsToWalletByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query AddSavingsToWalletByUserID: %w", err)
	}
	if q.addSellerStmt, err = db.PrepareContext(ctx, addSeller); err != nil {
		return nil, fmt.Errorf("error preparing query AddSeller: %w", err)
	}
	if q.addSessionStmt, err = db.PrepareContext(ctx, addSession); err != nil {
		return nil, fmt.Errorf("error preparing query AddSession: %w", err)
	}
	if q.addShippingAddressStmt, err = db.PrepareContext(ctx, addShippingAddress); err != nil {
		return nil, fmt.Errorf("error preparing query AddShippingAddress: %w", err)
	}
	if q.addUserStmt, err = db.PrepareContext(ctx, addUser); err != nil {
		return nil, fmt.Errorf("error preparing query AddUser: %w", err)
	}
	if q.addVendorPaymentStmt, err = db.PrepareContext(ctx, addVendorPayment); err != nil {
		return nil, fmt.Errorf("error preparing query AddVendorPayment: %w", err)
	}
	if q.addWalletByUserIDStmt, err = db.PrepareContext(ctx, addWalletByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query AddWalletByUserID: %w", err)
	}
	if q.blockUserByIDStmt, err = db.PrepareContext(ctx, blockUserByID); err != nil {
		return nil, fmt.Errorf("error preparing query BlockUserByID: %w", err)
	}
	if q.cancelOrderByIDStmt, err = db.PrepareContext(ctx, cancelOrderByID); err != nil {
		return nil, fmt.Errorf("error preparing query CancelOrderByID: %w", err)
	}
	if q.cancelPaymentByOrderIDStmt, err = db.PrepareContext(ctx, cancelPaymentByOrderID); err != nil {
		return nil, fmt.Errorf("error preparing query CancelPaymentByOrderID: %w", err)
	}
	if q.changeNameByUserIDStmt, err = db.PrepareContext(ctx, changeNameByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query ChangeNameByUserID: %w", err)
	}
	if q.changeOrderItemStatusByIDStmt, err = db.PrepareContext(ctx, changeOrderItemStatusByID); err != nil {
		return nil, fmt.Errorf("error preparing query ChangeOrderItemStatusByID: %w", err)
	}
	if q.changePasswordByUserIDStmt, err = db.PrepareContext(ctx, changePasswordByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query ChangePasswordByUserID: %w", err)
	}
	if q.decPaymentAmountByOrderItemIDStmt, err = db.PrepareContext(ctx, decPaymentAmountByOrderItemID); err != nil {
		return nil, fmt.Errorf("error preparing query DecPaymentAmountByOrderItemID: %w", err)
	}
	if q.decProductStockByIDStmt, err = db.PrepareContext(ctx, decProductStockByID); err != nil {
		return nil, fmt.Errorf("error preparing query DecProductStockByID: %w", err)
	}
	if q.deleteAddressByIDStmt, err = db.PrepareContext(ctx, deleteAddressByID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteAddressByID: %w", err)
	}
	if q.deleteAddressesByUserIDStmt, err = db.PrepareContext(ctx, deleteAddressesByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteAddressesByUserID: %w", err)
	}
	if q.deleteAllCategoriesForProductByIDStmt, err = db.PrepareContext(ctx, deleteAllCategoriesForProductByID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteAllCategoriesForProductByID: %w", err)
	}
	if q.deleteCartItemByUserIDAndProductIDStmt, err = db.PrepareContext(ctx, deleteCartItemByUserIDAndProductID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteCartItemByUserIDAndProductID: %w", err)
	}
	if q.deleteCartItemsByUserIDStmt, err = db.PrepareContext(ctx, deleteCartItemsByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteCartItemsByUserID: %w", err)
	}
	if q.deleteCategoryByNameStmt, err = db.PrepareContext(ctx, deleteCategoryByName); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteCategoryByName: %w", err)
	}
	if q.deleteCouponByIDStmt, err = db.PrepareContext(ctx, deleteCouponByID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteCouponByID: %w", err)
	}
	if q.deleteForgotOTPByEmailStmt, err = db.PrepareContext(ctx, deleteForgotOTPByEmail); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteForgotOTPByEmail: %w", err)
	}
	if q.deleteOTPByEmailStmt, err = db.PrepareContext(ctx, deleteOTPByEmail); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteOTPByEmail: %w", err)
	}
	if q.deleteOrderByIDStmt, err = db.PrepareContext(ctx, deleteOrderByID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteOrderByID: %w", err)
	}
	if q.deleteProductByIDStmt, err = db.PrepareContext(ctx, deleteProductByID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteProductByID: %w", err)
	}
	if q.deleteProductsBySellerIDStmt, err = db.PrepareContext(ctx, deleteProductsBySellerID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteProductsBySellerID: %w", err)
	}
	if q.deleteSessionByIDStmt, err = db.PrepareContext(ctx, deleteSessionByID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteSessionByID: %w", err)
	}
	if q.deleteSessionsByuserIDStmt, err = db.PrepareContext(ctx, deleteSessionsByuserID); err != nil {
		return nil, fmt.Errorf("error preparing query DeleteSessionsByuserID: %w", err)
	}
	if q.editAddressByIDStmt, err = db.PrepareContext(ctx, editAddressByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditAddressByID: %w", err)
	}
	if q.editCartItemByIDStmt, err = db.PrepareContext(ctx, editCartItemByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditCartItemByID: %w", err)
	}
	if q.editCategoryNameByNameStmt, err = db.PrepareContext(ctx, editCategoryNameByName); err != nil {
		return nil, fmt.Errorf("error preparing query EditCategoryNameByName: %w", err)
	}
	if q.editCouponByIDStmt, err = db.PrepareContext(ctx, editCouponByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditCouponByID: %w", err)
	}
	if q.editOrderItemStatusByIDStmt, err = db.PrepareContext(ctx, editOrderItemStatusByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditOrderItemStatusByID: %w", err)
	}
	if q.editPaymentByOrderIDStmt, err = db.PrepareContext(ctx, editPaymentByOrderID); err != nil {
		return nil, fmt.Errorf("error preparing query EditPaymentByOrderID: %w", err)
	}
	if q.editPaymentStatusByIDStmt, err = db.PrepareContext(ctx, editPaymentStatusByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditPaymentStatusByID: %w", err)
	}
	if q.editPaymentStatusByOrderIDStmt, err = db.PrepareContext(ctx, editPaymentStatusByOrderID); err != nil {
		return nil, fmt.Errorf("error preparing query EditPaymentStatusByOrderID: %w", err)
	}
	if q.editProductByIDStmt, err = db.PrepareContext(ctx, editProductByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditProductByID: %w", err)
	}
	if q.editSellerByIDStmt, err = db.PrepareContext(ctx, editSellerByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditSellerByID: %w", err)
	}
	if q.editUserByIDStmt, err = db.PrepareContext(ctx, editUserByID); err != nil {
		return nil, fmt.Errorf("error preparing query EditUserByID: %w", err)
	}
	if q.editVendorPaymentStatusByOrderItemIDStmt, err = db.PrepareContext(ctx, editVendorPaymentStatusByOrderItemID); err != nil {
		return nil, fmt.Errorf("error preparing query EditVendorPaymentStatusByOrderItemID: %w", err)
	}
	if q.getAddressByIDStmt, err = db.PrepareContext(ctx, getAddressByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetAddressByID: %w", err)
	}
	if q.getAddressBySellerIDStmt, err = db.PrepareContext(ctx, getAddressBySellerID); err != nil {
		return nil, fmt.Errorf("error preparing query GetAddressBySellerID: %w", err)
	}
	if q.getAddressesByUserIDStmt, err = db.PrepareContext(ctx, getAddressesByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetAddressesByUserID: %w", err)
	}
	if q.getAllCategoriesStmt, err = db.PrepareContext(ctx, getAllCategories); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllCategories: %w", err)
	}
	if q.getAllCategoriesForAdminStmt, err = db.PrepareContext(ctx, getAllCategoriesForAdmin); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllCategoriesForAdmin: %w", err)
	}
	if q.getAllCouponsStmt, err = db.PrepareContext(ctx, getAllCoupons); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllCoupons: %w", err)
	}
	if q.getAllCouponsForAdminStmt, err = db.PrepareContext(ctx, getAllCouponsForAdmin); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllCouponsForAdmin: %w", err)
	}
	if q.getAllOrderForAdminStmt, err = db.PrepareContext(ctx, getAllOrderForAdmin); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllOrderForAdmin: %w", err)
	}
	if q.getAllProductsStmt, err = db.PrepareContext(ctx, getAllProducts); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllProducts: %w", err)
	}
	if q.getAllProductsForAdminStmt, err = db.PrepareContext(ctx, getAllProductsForAdmin); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllProductsForAdmin: %w", err)
	}
	if q.getAllSessionsByUserIDStmt, err = db.PrepareContext(ctx, getAllSessionsByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllSessionsByUserID: %w", err)
	}
	if q.getAllUsersStmt, err = db.PrepareContext(ctx, getAllUsers); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllUsers: %w", err)
	}
	if q.getAllUsersByRoleSellerStmt, err = db.PrepareContext(ctx, getAllUsersByRoleSeller); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllUsersByRoleSeller: %w", err)
	}
	if q.getAllUsersByRoleUserStmt, err = db.PrepareContext(ctx, getAllUsersByRoleUser); err != nil {
		return nil, fmt.Errorf("error preparing query GetAllUsersByRoleUser: %w", err)
	}
	if q.getCartItemByIDStmt, err = db.PrepareContext(ctx, getCartItemByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetCartItemByID: %w", err)
	}
	if q.getCartItemByUserIDAndProductIDStmt, err = db.PrepareContext(ctx, getCartItemByUserIDAndProductID); err != nil {
		return nil, fmt.Errorf("error preparing query GetCartItemByUserIDAndProductID: %w", err)
	}
	if q.getCartItemsByUserIDStmt, err = db.PrepareContext(ctx, getCartItemsByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetCartItemsByUserID: %w", err)
	}
	if q.getCategoryByIDStmt, err = db.PrepareContext(ctx, getCategoryByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetCategoryByID: %w", err)
	}
	if q.getCategoryByNameStmt, err = db.PrepareContext(ctx, getCategoryByName); err != nil {
		return nil, fmt.Errorf("error preparing query GetCategoryByName: %w", err)
	}
	if q.getCategoryNamesOfProductByIDStmt, err = db.PrepareContext(ctx, getCategoryNamesOfProductByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetCategoryNamesOfProductByID: %w", err)
	}
	if q.getCouponByNameStmt, err = db.PrepareContext(ctx, getCouponByName); err != nil {
		return nil, fmt.Errorf("error preparing query GetCouponByName: %w", err)
	}
	if q.getOrderByIDStmt, err = db.PrepareContext(ctx, getOrderByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetOrderByID: %w", err)
	}
	if q.getOrderItemByIDStmt, err = db.PrepareContext(ctx, getOrderItemByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetOrderItemByID: %w", err)
	}
	if q.getOrderItemsByOrderIDStmt, err = db.PrepareContext(ctx, getOrderItemsByOrderID); err != nil {
		return nil, fmt.Errorf("error preparing query GetOrderItemsByOrderID: %w", err)
	}
	if q.getOrderItemsBySellerIDStmt, err = db.PrepareContext(ctx, getOrderItemsBySellerID); err != nil {
		return nil, fmt.Errorf("error preparing query GetOrderItemsBySellerID: %w", err)
	}
	if q.getOrderItemsBySellerIDAndDateRangeStmt, err = db.PrepareContext(ctx, getOrderItemsBySellerIDAndDateRange); err != nil {
		return nil, fmt.Errorf("error preparing query GetOrderItemsBySellerIDAndDateRange: %w", err)
	}
	if q.getOrderItemsByUserIDStmt, err = db.PrepareContext(ctx, getOrderItemsByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetOrderItemsByUserID: %w", err)
	}
	if q.getOrdersByUserIDStmt, err = db.PrepareContext(ctx, getOrdersByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetOrdersByUserID: %w", err)
	}
	if q.getPaymentByOrderIDStmt, err = db.PrepareContext(ctx, getPaymentByOrderID); err != nil {
		return nil, fmt.Errorf("error preparing query GetPaymentByOrderID: %w", err)
	}
	if q.getProductAndCategoryNameByIDStmt, err = db.PrepareContext(ctx, getProductAndCategoryNameByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductAndCategoryNameByID: %w", err)
	}
	if q.getProductByIDStmt, err = db.PrepareContext(ctx, getProductByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductByID: %w", err)
	}
	if q.getProductFromCartByIDStmt, err = db.PrepareContext(ctx, getProductFromCartByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductFromCartByID: %w", err)
	}
	if q.getProductNameAndQuantityFromCartsByIDStmt, err = db.PrepareContext(ctx, getProductNameAndQuantityFromCartsByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductNameAndQuantityFromCartsByID: %w", err)
	}
	if q.getProductsByCategoryNameStmt, err = db.PrepareContext(ctx, getProductsByCategoryName); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductsByCategoryName: %w", err)
	}
	if q.getProductsBySellerIDStmt, err = db.PrepareContext(ctx, getProductsBySellerID); err != nil {
		return nil, fmt.Errorf("error preparing query GetProductsBySellerID: %w", err)
	}
	if q.getSellerByProductIDStmt, err = db.PrepareContext(ctx, getSellerByProductID); err != nil {
		return nil, fmt.Errorf("error preparing query GetSellerByProductID: %w", err)
	}
	if q.getSellerIDFromOrderItemIDStmt, err = db.PrepareContext(ctx, getSellerIDFromOrderItemID); err != nil {
		return nil, fmt.Errorf("error preparing query GetSellerIDFromOrderItemID: %w", err)
	}
	if q.getSessionDetailsByIDStmt, err = db.PrepareContext(ctx, getSessionDetailsByID); err != nil {
		return nil, fmt.Errorf("error preparing query GetSessionDetailsByID: %w", err)
	}
	if q.getTotalAmountOfCartItemsStmt, err = db.PrepareContext(ctx, getTotalAmountOfCartItems); err != nil {
		return nil, fmt.Errorf("error preparing query GetTotalAmountOfCartItems: %w", err)
	}
	if q.getUserByEmailStmt, err = db.PrepareContext(ctx, getUserByEmail); err != nil {
		return nil, fmt.Errorf("error preparing query GetUserByEmail: %w", err)
	}
	if q.getUserByIdStmt, err = db.PrepareContext(ctx, getUserById); err != nil {
		return nil, fmt.Errorf("error preparing query GetUserById: %w", err)
	}
	if q.getUserBySessionIDStmt, err = db.PrepareContext(ctx, getUserBySessionID); err != nil {
		return nil, fmt.Errorf("error preparing query GetUserBySessionID: %w", err)
	}
	if q.getUserIDFromOrderItemIDStmt, err = db.PrepareContext(ctx, getUserIDFromOrderItemID); err != nil {
		return nil, fmt.Errorf("error preparing query GetUserIDFromOrderItemID: %w", err)
	}
	if q.getUserWithPasswordByEmailStmt, err = db.PrepareContext(ctx, getUserWithPasswordByEmail); err != nil {
		return nil, fmt.Errorf("error preparing query GetUserWithPasswordByEmail: %w", err)
	}
	if q.getValidForgotOTPByUserIDStmt, err = db.PrepareContext(ctx, getValidForgotOTPByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetValidForgotOTPByUserID: %w", err)
	}
	if q.getValidOTPByUserIDStmt, err = db.PrepareContext(ctx, getValidOTPByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetValidOTPByUserID: %w", err)
	}
	if q.getVendorPaymentByOrderItemIDStmt, err = db.PrepareContext(ctx, getVendorPaymentByOrderItemID); err != nil {
		return nil, fmt.Errorf("error preparing query GetVendorPaymentByOrderItemID: %w", err)
	}
	if q.getVendorPaymentsBySellerIDStmt, err = db.PrepareContext(ctx, getVendorPaymentsBySellerID); err != nil {
		return nil, fmt.Errorf("error preparing query GetVendorPaymentsBySellerID: %w", err)
	}
	if q.getVendorPaymentsBySellerIDAndDateRangeStmt, err = db.PrepareContext(ctx, getVendorPaymentsBySellerIDAndDateRange); err != nil {
		return nil, fmt.Errorf("error preparing query GetVendorPaymentsBySellerIDAndDateRange: %w", err)
	}
	if q.getWalletByUserIDStmt, err = db.PrepareContext(ctx, getWalletByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query GetWalletByUserID: %w", err)
	}
	if q.incProductStockByIDStmt, err = db.PrepareContext(ctx, incProductStockByID); err != nil {
		return nil, fmt.Errorf("error preparing query IncProductStockByID: %w", err)
	}
	if q.retractSavingsFromWalletByUserIDStmt, err = db.PrepareContext(ctx, retractSavingsFromWalletByUserID); err != nil {
		return nil, fmt.Errorf("error preparing query RetractSavingsFromWalletByUserID: %w", err)
	}
	if q.unblockUserByIDStmt, err = db.PrepareContext(ctx, unblockUserByID); err != nil {
		return nil, fmt.Errorf("error preparing query UnblockUserByID: %w", err)
	}
	if q.updateOrderTotalAmountStmt, err = db.PrepareContext(ctx, updateOrderTotalAmount); err != nil {
		return nil, fmt.Errorf("error preparing query UpdateOrderTotalAmount: %w", err)
	}
	if q.verifySellerByIDStmt, err = db.PrepareContext(ctx, verifySellerByID); err != nil {
		return nil, fmt.Errorf("error preparing query VerifySellerByID: %w", err)
	}
	if q.verifySellerEmailByIDStmt, err = db.PrepareContext(ctx, verifySellerEmailByID); err != nil {
		return nil, fmt.Errorf("error preparing query VerifySellerEmailByID: %w", err)
	}
	if q.verifyUserByIDStmt, err = db.PrepareContext(ctx, verifyUserByID); err != nil {
		return nil, fmt.Errorf("error preparing query VerifyUserByID: %w", err)
	}
	return &q, nil
}

func (q *Queries) Close() error {
	var err error
	if q.addAddressByUserIDStmt != nil {
		if cerr := q.addAddressByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addAddressByUserIDStmt: %w", cerr)
		}
	}
	if q.addAndVerifyUserStmt != nil {
		if cerr := q.addAndVerifyUserStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addAndVerifyUserStmt: %w", cerr)
		}
	}
	if q.addCartItemStmt != nil {
		if cerr := q.addCartItemStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addCartItemStmt: %w", cerr)
		}
	}
	if q.addCateogryStmt != nil {
		if cerr := q.addCateogryStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addCateogryStmt: %w", cerr)
		}
	}
	if q.addCouponStmt != nil {
		if cerr := q.addCouponStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addCouponStmt: %w", cerr)
		}
	}
	if q.addForgotOTPByUserIDStmt != nil {
		if cerr := q.addForgotOTPByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addForgotOTPByUserIDStmt: %w", cerr)
		}
	}
	if q.addOTPStmt != nil {
		if cerr := q.addOTPStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addOTPStmt: %w", cerr)
		}
	}
	if q.addOrderStmt != nil {
		if cerr := q.addOrderStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addOrderStmt: %w", cerr)
		}
	}
	if q.addOrderITemStmt != nil {
		if cerr := q.addOrderITemStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addOrderITemStmt: %w", cerr)
		}
	}
	if q.addPaymentStmt != nil {
		if cerr := q.addPaymentStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addPaymentStmt: %w", cerr)
		}
	}
	if q.addProductStmt != nil {
		if cerr := q.addProductStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addProductStmt: %w", cerr)
		}
	}
	if q.addProductToCategoryByCategoryNameStmt != nil {
		if cerr := q.addProductToCategoryByCategoryNameStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addProductToCategoryByCategoryNameStmt: %w", cerr)
		}
	}
	if q.addProductToCategoryByIDStmt != nil {
		if cerr := q.addProductToCategoryByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addProductToCategoryByIDStmt: %w", cerr)
		}
	}
	if q.addSavingsToWalletByUserIDStmt != nil {
		if cerr := q.addSavingsToWalletByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addSavingsToWalletByUserIDStmt: %w", cerr)
		}
	}
	if q.addSellerStmt != nil {
		if cerr := q.addSellerStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addSellerStmt: %w", cerr)
		}
	}
	if q.addSessionStmt != nil {
		if cerr := q.addSessionStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addSessionStmt: %w", cerr)
		}
	}
	if q.addShippingAddressStmt != nil {
		if cerr := q.addShippingAddressStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addShippingAddressStmt: %w", cerr)
		}
	}
	if q.addUserStmt != nil {
		if cerr := q.addUserStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addUserStmt: %w", cerr)
		}
	}
	if q.addVendorPaymentStmt != nil {
		if cerr := q.addVendorPaymentStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addVendorPaymentStmt: %w", cerr)
		}
	}
	if q.addWalletByUserIDStmt != nil {
		if cerr := q.addWalletByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing addWalletByUserIDStmt: %w", cerr)
		}
	}
	if q.blockUserByIDStmt != nil {
		if cerr := q.blockUserByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing blockUserByIDStmt: %w", cerr)
		}
	}
	if q.cancelOrderByIDStmt != nil {
		if cerr := q.cancelOrderByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing cancelOrderByIDStmt: %w", cerr)
		}
	}
	if q.cancelPaymentByOrderIDStmt != nil {
		if cerr := q.cancelPaymentByOrderIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing cancelPaymentByOrderIDStmt: %w", cerr)
		}
	}
	if q.changeNameByUserIDStmt != nil {
		if cerr := q.changeNameByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing changeNameByUserIDStmt: %w", cerr)
		}
	}
	if q.changeOrderItemStatusByIDStmt != nil {
		if cerr := q.changeOrderItemStatusByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing changeOrderItemStatusByIDStmt: %w", cerr)
		}
	}
	if q.changePasswordByUserIDStmt != nil {
		if cerr := q.changePasswordByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing changePasswordByUserIDStmt: %w", cerr)
		}
	}
	if q.decPaymentAmountByOrderItemIDStmt != nil {
		if cerr := q.decPaymentAmountByOrderItemIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing decPaymentAmountByOrderItemIDStmt: %w", cerr)
		}
	}
	if q.decProductStockByIDStmt != nil {
		if cerr := q.decProductStockByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing decProductStockByIDStmt: %w", cerr)
		}
	}
	if q.deleteAddressByIDStmt != nil {
		if cerr := q.deleteAddressByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteAddressByIDStmt: %w", cerr)
		}
	}
	if q.deleteAddressesByUserIDStmt != nil {
		if cerr := q.deleteAddressesByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteAddressesByUserIDStmt: %w", cerr)
		}
	}
	if q.deleteAllCategoriesForProductByIDStmt != nil {
		if cerr := q.deleteAllCategoriesForProductByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteAllCategoriesForProductByIDStmt: %w", cerr)
		}
	}
	if q.deleteCartItemByUserIDAndProductIDStmt != nil {
		if cerr := q.deleteCartItemByUserIDAndProductIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteCartItemByUserIDAndProductIDStmt: %w", cerr)
		}
	}
	if q.deleteCartItemsByUserIDStmt != nil {
		if cerr := q.deleteCartItemsByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteCartItemsByUserIDStmt: %w", cerr)
		}
	}
	if q.deleteCategoryByNameStmt != nil {
		if cerr := q.deleteCategoryByNameStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteCategoryByNameStmt: %w", cerr)
		}
	}
	if q.deleteCouponByIDStmt != nil {
		if cerr := q.deleteCouponByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteCouponByIDStmt: %w", cerr)
		}
	}
	if q.deleteForgotOTPByEmailStmt != nil {
		if cerr := q.deleteForgotOTPByEmailStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteForgotOTPByEmailStmt: %w", cerr)
		}
	}
	if q.deleteOTPByEmailStmt != nil {
		if cerr := q.deleteOTPByEmailStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteOTPByEmailStmt: %w", cerr)
		}
	}
	if q.deleteOrderByIDStmt != nil {
		if cerr := q.deleteOrderByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteOrderByIDStmt: %w", cerr)
		}
	}
	if q.deleteProductByIDStmt != nil {
		if cerr := q.deleteProductByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteProductByIDStmt: %w", cerr)
		}
	}
	if q.deleteProductsBySellerIDStmt != nil {
		if cerr := q.deleteProductsBySellerIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteProductsBySellerIDStmt: %w", cerr)
		}
	}
	if q.deleteSessionByIDStmt != nil {
		if cerr := q.deleteSessionByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteSessionByIDStmt: %w", cerr)
		}
	}
	if q.deleteSessionsByuserIDStmt != nil {
		if cerr := q.deleteSessionsByuserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing deleteSessionsByuserIDStmt: %w", cerr)
		}
	}
	if q.editAddressByIDStmt != nil {
		if cerr := q.editAddressByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editAddressByIDStmt: %w", cerr)
		}
	}
	if q.editCartItemByIDStmt != nil {
		if cerr := q.editCartItemByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editCartItemByIDStmt: %w", cerr)
		}
	}
	if q.editCategoryNameByNameStmt != nil {
		if cerr := q.editCategoryNameByNameStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editCategoryNameByNameStmt: %w", cerr)
		}
	}
	if q.editCouponByIDStmt != nil {
		if cerr := q.editCouponByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editCouponByIDStmt: %w", cerr)
		}
	}
	if q.editOrderItemStatusByIDStmt != nil {
		if cerr := q.editOrderItemStatusByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editOrderItemStatusByIDStmt: %w", cerr)
		}
	}
	if q.editPaymentByOrderIDStmt != nil {
		if cerr := q.editPaymentByOrderIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editPaymentByOrderIDStmt: %w", cerr)
		}
	}
	if q.editPaymentStatusByIDStmt != nil {
		if cerr := q.editPaymentStatusByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editPaymentStatusByIDStmt: %w", cerr)
		}
	}
	if q.editPaymentStatusByOrderIDStmt != nil {
		if cerr := q.editPaymentStatusByOrderIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editPaymentStatusByOrderIDStmt: %w", cerr)
		}
	}
	if q.editProductByIDStmt != nil {
		if cerr := q.editProductByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editProductByIDStmt: %w", cerr)
		}
	}
	if q.editSellerByIDStmt != nil {
		if cerr := q.editSellerByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editSellerByIDStmt: %w", cerr)
		}
	}
	if q.editUserByIDStmt != nil {
		if cerr := q.editUserByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editUserByIDStmt: %w", cerr)
		}
	}
	if q.editVendorPaymentStatusByOrderItemIDStmt != nil {
		if cerr := q.editVendorPaymentStatusByOrderItemIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing editVendorPaymentStatusByOrderItemIDStmt: %w", cerr)
		}
	}
	if q.getAddressByIDStmt != nil {
		if cerr := q.getAddressByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAddressByIDStmt: %w", cerr)
		}
	}
	if q.getAddressBySellerIDStmt != nil {
		if cerr := q.getAddressBySellerIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAddressBySellerIDStmt: %w", cerr)
		}
	}
	if q.getAddressesByUserIDStmt != nil {
		if cerr := q.getAddressesByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAddressesByUserIDStmt: %w", cerr)
		}
	}
	if q.getAllCategoriesStmt != nil {
		if cerr := q.getAllCategoriesStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllCategoriesStmt: %w", cerr)
		}
	}
	if q.getAllCategoriesForAdminStmt != nil {
		if cerr := q.getAllCategoriesForAdminStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllCategoriesForAdminStmt: %w", cerr)
		}
	}
	if q.getAllCouponsStmt != nil {
		if cerr := q.getAllCouponsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllCouponsStmt: %w", cerr)
		}
	}
	if q.getAllCouponsForAdminStmt != nil {
		if cerr := q.getAllCouponsForAdminStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllCouponsForAdminStmt: %w", cerr)
		}
	}
	if q.getAllOrderForAdminStmt != nil {
		if cerr := q.getAllOrderForAdminStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllOrderForAdminStmt: %w", cerr)
		}
	}
	if q.getAllProductsStmt != nil {
		if cerr := q.getAllProductsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllProductsStmt: %w", cerr)
		}
	}
	if q.getAllProductsForAdminStmt != nil {
		if cerr := q.getAllProductsForAdminStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllProductsForAdminStmt: %w", cerr)
		}
	}
	if q.getAllSessionsByUserIDStmt != nil {
		if cerr := q.getAllSessionsByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllSessionsByUserIDStmt: %w", cerr)
		}
	}
	if q.getAllUsersStmt != nil {
		if cerr := q.getAllUsersStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllUsersStmt: %w", cerr)
		}
	}
	if q.getAllUsersByRoleSellerStmt != nil {
		if cerr := q.getAllUsersByRoleSellerStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllUsersByRoleSellerStmt: %w", cerr)
		}
	}
	if q.getAllUsersByRoleUserStmt != nil {
		if cerr := q.getAllUsersByRoleUserStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getAllUsersByRoleUserStmt: %w", cerr)
		}
	}
	if q.getCartItemByIDStmt != nil {
		if cerr := q.getCartItemByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCartItemByIDStmt: %w", cerr)
		}
	}
	if q.getCartItemByUserIDAndProductIDStmt != nil {
		if cerr := q.getCartItemByUserIDAndProductIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCartItemByUserIDAndProductIDStmt: %w", cerr)
		}
	}
	if q.getCartItemsByUserIDStmt != nil {
		if cerr := q.getCartItemsByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCartItemsByUserIDStmt: %w", cerr)
		}
	}
	if q.getCategoryByIDStmt != nil {
		if cerr := q.getCategoryByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCategoryByIDStmt: %w", cerr)
		}
	}
	if q.getCategoryByNameStmt != nil {
		if cerr := q.getCategoryByNameStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCategoryByNameStmt: %w", cerr)
		}
	}
	if q.getCategoryNamesOfProductByIDStmt != nil {
		if cerr := q.getCategoryNamesOfProductByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCategoryNamesOfProductByIDStmt: %w", cerr)
		}
	}
	if q.getCouponByNameStmt != nil {
		if cerr := q.getCouponByNameStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getCouponByNameStmt: %w", cerr)
		}
	}
	if q.getOrderByIDStmt != nil {
		if cerr := q.getOrderByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getOrderByIDStmt: %w", cerr)
		}
	}
	if q.getOrderItemByIDStmt != nil {
		if cerr := q.getOrderItemByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getOrderItemByIDStmt: %w", cerr)
		}
	}
	if q.getOrderItemsByOrderIDStmt != nil {
		if cerr := q.getOrderItemsByOrderIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getOrderItemsByOrderIDStmt: %w", cerr)
		}
	}
	if q.getOrderItemsBySellerIDStmt != nil {
		if cerr := q.getOrderItemsBySellerIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getOrderItemsBySellerIDStmt: %w", cerr)
		}
	}
	if q.getOrderItemsBySellerIDAndDateRangeStmt != nil {
		if cerr := q.getOrderItemsBySellerIDAndDateRangeStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getOrderItemsBySellerIDAndDateRangeStmt: %w", cerr)
		}
	}
	if q.getOrderItemsByUserIDStmt != nil {
		if cerr := q.getOrderItemsByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getOrderItemsByUserIDStmt: %w", cerr)
		}
	}
	if q.getOrdersByUserIDStmt != nil {
		if cerr := q.getOrdersByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getOrdersByUserIDStmt: %w", cerr)
		}
	}
	if q.getPaymentByOrderIDStmt != nil {
		if cerr := q.getPaymentByOrderIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getPaymentByOrderIDStmt: %w", cerr)
		}
	}
	if q.getProductAndCategoryNameByIDStmt != nil {
		if cerr := q.getProductAndCategoryNameByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductAndCategoryNameByIDStmt: %w", cerr)
		}
	}
	if q.getProductByIDStmt != nil {
		if cerr := q.getProductByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductByIDStmt: %w", cerr)
		}
	}
	if q.getProductFromCartByIDStmt != nil {
		if cerr := q.getProductFromCartByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductFromCartByIDStmt: %w", cerr)
		}
	}
	if q.getProductNameAndQuantityFromCartsByIDStmt != nil {
		if cerr := q.getProductNameAndQuantityFromCartsByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductNameAndQuantityFromCartsByIDStmt: %w", cerr)
		}
	}
	if q.getProductsByCategoryNameStmt != nil {
		if cerr := q.getProductsByCategoryNameStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductsByCategoryNameStmt: %w", cerr)
		}
	}
	if q.getProductsBySellerIDStmt != nil {
		if cerr := q.getProductsBySellerIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getProductsBySellerIDStmt: %w", cerr)
		}
	}
	if q.getSellerByProductIDStmt != nil {
		if cerr := q.getSellerByProductIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getSellerByProductIDStmt: %w", cerr)
		}
	}
	if q.getSellerIDFromOrderItemIDStmt != nil {
		if cerr := q.getSellerIDFromOrderItemIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getSellerIDFromOrderItemIDStmt: %w", cerr)
		}
	}
	if q.getSessionDetailsByIDStmt != nil {
		if cerr := q.getSessionDetailsByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getSessionDetailsByIDStmt: %w", cerr)
		}
	}
	if q.getTotalAmountOfCartItemsStmt != nil {
		if cerr := q.getTotalAmountOfCartItemsStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getTotalAmountOfCartItemsStmt: %w", cerr)
		}
	}
	if q.getUserByEmailStmt != nil {
		if cerr := q.getUserByEmailStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getUserByEmailStmt: %w", cerr)
		}
	}
	if q.getUserByIdStmt != nil {
		if cerr := q.getUserByIdStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getUserByIdStmt: %w", cerr)
		}
	}
	if q.getUserBySessionIDStmt != nil {
		if cerr := q.getUserBySessionIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getUserBySessionIDStmt: %w", cerr)
		}
	}
	if q.getUserIDFromOrderItemIDStmt != nil {
		if cerr := q.getUserIDFromOrderItemIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getUserIDFromOrderItemIDStmt: %w", cerr)
		}
	}
	if q.getUserWithPasswordByEmailStmt != nil {
		if cerr := q.getUserWithPasswordByEmailStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getUserWithPasswordByEmailStmt: %w", cerr)
		}
	}
	if q.getValidForgotOTPByUserIDStmt != nil {
		if cerr := q.getValidForgotOTPByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getValidForgotOTPByUserIDStmt: %w", cerr)
		}
	}
	if q.getValidOTPByUserIDStmt != nil {
		if cerr := q.getValidOTPByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getValidOTPByUserIDStmt: %w", cerr)
		}
	}
	if q.getVendorPaymentByOrderItemIDStmt != nil {
		if cerr := q.getVendorPaymentByOrderItemIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVendorPaymentByOrderItemIDStmt: %w", cerr)
		}
	}
	if q.getVendorPaymentsBySellerIDStmt != nil {
		if cerr := q.getVendorPaymentsBySellerIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVendorPaymentsBySellerIDStmt: %w", cerr)
		}
	}
	if q.getVendorPaymentsBySellerIDAndDateRangeStmt != nil {
		if cerr := q.getVendorPaymentsBySellerIDAndDateRangeStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getVendorPaymentsBySellerIDAndDateRangeStmt: %w", cerr)
		}
	}
	if q.getWalletByUserIDStmt != nil {
		if cerr := q.getWalletByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing getWalletByUserIDStmt: %w", cerr)
		}
	}
	if q.incProductStockByIDStmt != nil {
		if cerr := q.incProductStockByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing incProductStockByIDStmt: %w", cerr)
		}
	}
	if q.retractSavingsFromWalletByUserIDStmt != nil {
		if cerr := q.retractSavingsFromWalletByUserIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing retractSavingsFromWalletByUserIDStmt: %w", cerr)
		}
	}
	if q.unblockUserByIDStmt != nil {
		if cerr := q.unblockUserByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing unblockUserByIDStmt: %w", cerr)
		}
	}
	if q.updateOrderTotalAmountStmt != nil {
		if cerr := q.updateOrderTotalAmountStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing updateOrderTotalAmountStmt: %w", cerr)
		}
	}
	if q.verifySellerByIDStmt != nil {
		if cerr := q.verifySellerByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing verifySellerByIDStmt: %w", cerr)
		}
	}
	if q.verifySellerEmailByIDStmt != nil {
		if cerr := q.verifySellerEmailByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing verifySellerEmailByIDStmt: %w", cerr)
		}
	}
	if q.verifyUserByIDStmt != nil {
		if cerr := q.verifyUserByIDStmt.Close(); cerr != nil {
			err = fmt.Errorf("error closing verifyUserByIDStmt: %w", cerr)
		}
	}
	return err
}

func (q *Queries) exec(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) (sql.Result, error) {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).ExecContext(ctx, args...)
	case stmt != nil:
		return stmt.ExecContext(ctx, args...)
	default:
		return q.db.ExecContext(ctx, query, args...)
	}
}

func (q *Queries) query(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) (*sql.Rows, error) {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).QueryContext(ctx, args...)
	case stmt != nil:
		return stmt.QueryContext(ctx, args...)
	default:
		return q.db.QueryContext(ctx, query, args...)
	}
}

func (q *Queries) queryRow(ctx context.Context, stmt *sql.Stmt, query string, args ...interface{}) *sql.Row {
	switch {
	case stmt != nil && q.tx != nil:
		return q.tx.StmtContext(ctx, stmt).QueryRowContext(ctx, args...)
	case stmt != nil:
		return stmt.QueryRowContext(ctx, args...)
	default:
		return q.db.QueryRowContext(ctx, query, args...)
	}
}

type Queries struct {
	db                                          DBTX
	tx                                          *sql.Tx
	addAddressByUserIDStmt                      *sql.Stmt
	addAndVerifyUserStmt                        *sql.Stmt
	addCartItemStmt                             *sql.Stmt
	addCateogryStmt                             *sql.Stmt
	addCouponStmt                               *sql.Stmt
	addForgotOTPByUserIDStmt                    *sql.Stmt
	addOTPStmt                                  *sql.Stmt
	addOrderStmt                                *sql.Stmt
	addOrderITemStmt                            *sql.Stmt
	addPaymentStmt                              *sql.Stmt
	addProductStmt                              *sql.Stmt
	addProductToCategoryByCategoryNameStmt      *sql.Stmt
	addProductToCategoryByIDStmt                *sql.Stmt
	addSavingsToWalletByUserIDStmt              *sql.Stmt
	addSellerStmt                               *sql.Stmt
	addSessionStmt                              *sql.Stmt
	addShippingAddressStmt                      *sql.Stmt
	addUserStmt                                 *sql.Stmt
	addVendorPaymentStmt                        *sql.Stmt
	addWalletByUserIDStmt                       *sql.Stmt
	blockUserByIDStmt                           *sql.Stmt
	cancelOrderByIDStmt                         *sql.Stmt
	cancelPaymentByOrderIDStmt                  *sql.Stmt
	changeNameByUserIDStmt                      *sql.Stmt
	changeOrderItemStatusByIDStmt               *sql.Stmt
	changePasswordByUserIDStmt                  *sql.Stmt
	decPaymentAmountByOrderItemIDStmt           *sql.Stmt
	decProductStockByIDStmt                     *sql.Stmt
	deleteAddressByIDStmt                       *sql.Stmt
	deleteAddressesByUserIDStmt                 *sql.Stmt
	deleteAllCategoriesForProductByIDStmt       *sql.Stmt
	deleteCartItemByUserIDAndProductIDStmt      *sql.Stmt
	deleteCartItemsByUserIDStmt                 *sql.Stmt
	deleteCategoryByNameStmt                    *sql.Stmt
	deleteCouponByIDStmt                        *sql.Stmt
	deleteForgotOTPByEmailStmt                  *sql.Stmt
	deleteOTPByEmailStmt                        *sql.Stmt
	deleteOrderByIDStmt                         *sql.Stmt
	deleteProductByIDStmt                       *sql.Stmt
	deleteProductsBySellerIDStmt                *sql.Stmt
	deleteSessionByIDStmt                       *sql.Stmt
	deleteSessionsByuserIDStmt                  *sql.Stmt
	editAddressByIDStmt                         *sql.Stmt
	editCartItemByIDStmt                        *sql.Stmt
	editCategoryNameByNameStmt                  *sql.Stmt
	editCouponByIDStmt                          *sql.Stmt
	editOrderItemStatusByIDStmt                 *sql.Stmt
	editPaymentByOrderIDStmt                    *sql.Stmt
	editPaymentStatusByIDStmt                   *sql.Stmt
	editPaymentStatusByOrderIDStmt              *sql.Stmt
	editProductByIDStmt                         *sql.Stmt
	editSellerByIDStmt                          *sql.Stmt
	editUserByIDStmt                            *sql.Stmt
	editVendorPaymentStatusByOrderItemIDStmt    *sql.Stmt
	getAddressByIDStmt                          *sql.Stmt
	getAddressBySellerIDStmt                    *sql.Stmt
	getAddressesByUserIDStmt                    *sql.Stmt
	getAllCategoriesStmt                        *sql.Stmt
	getAllCategoriesForAdminStmt                *sql.Stmt
	getAllCouponsStmt                           *sql.Stmt
	getAllCouponsForAdminStmt                   *sql.Stmt
	getAllOrderForAdminStmt                     *sql.Stmt
	getAllProductsStmt                          *sql.Stmt
	getAllProductsForAdminStmt                  *sql.Stmt
	getAllSessionsByUserIDStmt                  *sql.Stmt
	getAllUsersStmt                             *sql.Stmt
	getAllUsersByRoleSellerStmt                 *sql.Stmt
	getAllUsersByRoleUserStmt                   *sql.Stmt
	getCartItemByIDStmt                         *sql.Stmt
	getCartItemByUserIDAndProductIDStmt         *sql.Stmt
	getCartItemsByUserIDStmt                    *sql.Stmt
	getCategoryByIDStmt                         *sql.Stmt
	getCategoryByNameStmt                       *sql.Stmt
	getCategoryNamesOfProductByIDStmt           *sql.Stmt
	getCouponByNameStmt                         *sql.Stmt
	getOrderByIDStmt                            *sql.Stmt
	getOrderItemByIDStmt                        *sql.Stmt
	getOrderItemsByOrderIDStmt                  *sql.Stmt
	getOrderItemsBySellerIDStmt                 *sql.Stmt
	getOrderItemsBySellerIDAndDateRangeStmt     *sql.Stmt
	getOrderItemsByUserIDStmt                   *sql.Stmt
	getOrdersByUserIDStmt                       *sql.Stmt
	getPaymentByOrderIDStmt                     *sql.Stmt
	getProductAndCategoryNameByIDStmt           *sql.Stmt
	getProductByIDStmt                          *sql.Stmt
	getProductFromCartByIDStmt                  *sql.Stmt
	getProductNameAndQuantityFromCartsByIDStmt  *sql.Stmt
	getProductsByCategoryNameStmt               *sql.Stmt
	getProductsBySellerIDStmt                   *sql.Stmt
	getSellerByProductIDStmt                    *sql.Stmt
	getSellerIDFromOrderItemIDStmt              *sql.Stmt
	getSessionDetailsByIDStmt                   *sql.Stmt
	getTotalAmountOfCartItemsStmt               *sql.Stmt
	getUserByEmailStmt                          *sql.Stmt
	getUserByIdStmt                             *sql.Stmt
	getUserBySessionIDStmt                      *sql.Stmt
	getUserIDFromOrderItemIDStmt                *sql.Stmt
	getUserWithPasswordByEmailStmt              *sql.Stmt
	getValidForgotOTPByUserIDStmt               *sql.Stmt
	getValidOTPByUserIDStmt                     *sql.Stmt
	getVendorPaymentByOrderItemIDStmt           *sql.Stmt
	getVendorPaymentsBySellerIDStmt             *sql.Stmt
	getVendorPaymentsBySellerIDAndDateRangeStmt *sql.Stmt
	getWalletByUserIDStmt                       *sql.Stmt
	incProductStockByIDStmt                     *sql.Stmt
	retractSavingsFromWalletByUserIDStmt        *sql.Stmt
	unblockUserByIDStmt                         *sql.Stmt
	updateOrderTotalAmountStmt                  *sql.Stmt
	verifySellerByIDStmt                        *sql.Stmt
	verifySellerEmailByIDStmt                   *sql.Stmt
	verifyUserByIDStmt                          *sql.Stmt
}

func (q *Queries) WithTx(tx *sql.Tx) *Queries {
	return &Queries{
		db:                                          tx,
		tx:                                          tx,
		addAddressByUserIDStmt:                      q.addAddressByUserIDStmt,
		addAndVerifyUserStmt:                        q.addAndVerifyUserStmt,
		addCartItemStmt:                             q.addCartItemStmt,
		addCateogryStmt:                             q.addCateogryStmt,
		addCouponStmt:                               q.addCouponStmt,
		addForgotOTPByUserIDStmt:                    q.addForgotOTPByUserIDStmt,
		addOTPStmt:                                  q.addOTPStmt,
		addOrderStmt:                                q.addOrderStmt,
		addOrderITemStmt:                            q.addOrderITemStmt,
		addPaymentStmt:                              q.addPaymentStmt,
		addProductStmt:                              q.addProductStmt,
		addProductToCategoryByCategoryNameStmt:      q.addProductToCategoryByCategoryNameStmt,
		addProductToCategoryByIDStmt:                q.addProductToCategoryByIDStmt,
		addSavingsToWalletByUserIDStmt:              q.addSavingsToWalletByUserIDStmt,
		addSellerStmt:                               q.addSellerStmt,
		addSessionStmt:                              q.addSessionStmt,
		addShippingAddressStmt:                      q.addShippingAddressStmt,
		addUserStmt:                                 q.addUserStmt,
		addVendorPaymentStmt:                        q.addVendorPaymentStmt,
		addWalletByUserIDStmt:                       q.addWalletByUserIDStmt,
		blockUserByIDStmt:                           q.blockUserByIDStmt,
		cancelOrderByIDStmt:                         q.cancelOrderByIDStmt,
		cancelPaymentByOrderIDStmt:                  q.cancelPaymentByOrderIDStmt,
		changeNameByUserIDStmt:                      q.changeNameByUserIDStmt,
		changeOrderItemStatusByIDStmt:               q.changeOrderItemStatusByIDStmt,
		changePasswordByUserIDStmt:                  q.changePasswordByUserIDStmt,
		decPaymentAmountByOrderItemIDStmt:           q.decPaymentAmountByOrderItemIDStmt,
		decProductStockByIDStmt:                     q.decProductStockByIDStmt,
		deleteAddressByIDStmt:                       q.deleteAddressByIDStmt,
		deleteAddressesByUserIDStmt:                 q.deleteAddressesByUserIDStmt,
		deleteAllCategoriesForProductByIDStmt:       q.deleteAllCategoriesForProductByIDStmt,
		deleteCartItemByUserIDAndProductIDStmt:      q.deleteCartItemByUserIDAndProductIDStmt,
		deleteCartItemsByUserIDStmt:                 q.deleteCartItemsByUserIDStmt,
		deleteCategoryByNameStmt:                    q.deleteCategoryByNameStmt,
		deleteCouponByIDStmt:                        q.deleteCouponByIDStmt,
		deleteForgotOTPByEmailStmt:                  q.deleteForgotOTPByEmailStmt,
		deleteOTPByEmailStmt:                        q.deleteOTPByEmailStmt,
		deleteOrderByIDStmt:                         q.deleteOrderByIDStmt,
		deleteProductByIDStmt:                       q.deleteProductByIDStmt,
		deleteProductsBySellerIDStmt:                q.deleteProductsBySellerIDStmt,
		deleteSessionByIDStmt:                       q.deleteSessionByIDStmt,
		deleteSessionsByuserIDStmt:                  q.deleteSessionsByuserIDStmt,
		editAddressByIDStmt:                         q.editAddressByIDStmt,
		editCartItemByIDStmt:                        q.editCartItemByIDStmt,
		editCategoryNameByNameStmt:                  q.editCategoryNameByNameStmt,
		editCouponByIDStmt:                          q.editCouponByIDStmt,
		editOrderItemStatusByIDStmt:                 q.editOrderItemStatusByIDStmt,
		editPaymentByOrderIDStmt:                    q.editPaymentByOrderIDStmt,
		editPaymentStatusByIDStmt:                   q.editPaymentStatusByIDStmt,
		editPaymentStatusByOrderIDStmt:              q.editPaymentStatusByOrderIDStmt,
		editProductByIDStmt:                         q.editProductByIDStmt,
		editSellerByIDStmt:                          q.editSellerByIDStmt,
		editUserByIDStmt:                            q.editUserByIDStmt,
		editVendorPaymentStatusByOrderItemIDStmt:    q.editVendorPaymentStatusByOrderItemIDStmt,
		getAddressByIDStmt:                          q.getAddressByIDStmt,
		getAddressBySellerIDStmt:                    q.getAddressBySellerIDStmt,
		getAddressesByUserIDStmt:                    q.getAddressesByUserIDStmt,
		getAllCategoriesStmt:                        q.getAllCategoriesStmt,
		getAllCategoriesForAdminStmt:                q.getAllCategoriesForAdminStmt,
		getAllCouponsStmt:                           q.getAllCouponsStmt,
		getAllCouponsForAdminStmt:                   q.getAllCouponsForAdminStmt,
		getAllOrderForAdminStmt:                     q.getAllOrderForAdminStmt,
		getAllProductsStmt:                          q.getAllProductsStmt,
		getAllProductsForAdminStmt:                  q.getAllProductsForAdminStmt,
		getAllSessionsByUserIDStmt:                  q.getAllSessionsByUserIDStmt,
		getAllUsersStmt:                             q.getAllUsersStmt,
		getAllUsersByRoleSellerStmt:                 q.getAllUsersByRoleSellerStmt,
		getAllUsersByRoleUserStmt:                   q.getAllUsersByRoleUserStmt,
		getCartItemByIDStmt:                         q.getCartItemByIDStmt,
		getCartItemByUserIDAndProductIDStmt:         q.getCartItemByUserIDAndProductIDStmt,
		getCartItemsByUserIDStmt:                    q.getCartItemsByUserIDStmt,
		getCategoryByIDStmt:                         q.getCategoryByIDStmt,
		getCategoryByNameStmt:                       q.getCategoryByNameStmt,
		getCategoryNamesOfProductByIDStmt:           q.getCategoryNamesOfProductByIDStmt,
		getCouponByNameStmt:                         q.getCouponByNameStmt,
		getOrderByIDStmt:                            q.getOrderByIDStmt,
		getOrderItemByIDStmt:                        q.getOrderItemByIDStmt,
		getOrderItemsByOrderIDStmt:                  q.getOrderItemsByOrderIDStmt,
		getOrderItemsBySellerIDStmt:                 q.getOrderItemsBySellerIDStmt,
		getOrderItemsBySellerIDAndDateRangeStmt:     q.getOrderItemsBySellerIDAndDateRangeStmt,
		getOrderItemsByUserIDStmt:                   q.getOrderItemsByUserIDStmt,
		getOrdersByUserIDStmt:                       q.getOrdersByUserIDStmt,
		getPaymentByOrderIDStmt:                     q.getPaymentByOrderIDStmt,
		getProductAndCategoryNameByIDStmt:           q.getProductAndCategoryNameByIDStmt,
		getProductByIDStmt:                          q.getProductByIDStmt,
		getProductFromCartByIDStmt:                  q.getProductFromCartByIDStmt,
		getProductNameAndQuantityFromCartsByIDStmt:  q.getProductNameAndQuantityFromCartsByIDStmt,
		getProductsByCategoryNameStmt:               q.getProductsByCategoryNameStmt,
		getProductsBySellerIDStmt:                   q.getProductsBySellerIDStmt,
		getSellerByProductIDStmt:                    q.getSellerByProductIDStmt,
		getSellerIDFromOrderItemIDStmt:              q.getSellerIDFromOrderItemIDStmt,
		getSessionDetailsByIDStmt:                   q.getSessionDetailsByIDStmt,
		getTotalAmountOfCartItemsStmt:               q.getTotalAmountOfCartItemsStmt,
		getUserByEmailStmt:                          q.getUserByEmailStmt,
		getUserByIdStmt:                             q.getUserByIdStmt,
		getUserBySessionIDStmt:                      q.getUserBySessionIDStmt,
		getUserIDFromOrderItemIDStmt:                q.getUserIDFromOrderItemIDStmt,
		getUserWithPasswordByEmailStmt:              q.getUserWithPasswordByEmailStmt,
		getValidForgotOTPByUserIDStmt:               q.getValidForgotOTPByUserIDStmt,
		getValidOTPByUserIDStmt:                     q.getValidOTPByUserIDStmt,
		getVendorPaymentByOrderItemIDStmt:           q.getVendorPaymentByOrderItemIDStmt,
		getVendorPaymentsBySellerIDStmt:             q.getVendorPaymentsBySellerIDStmt,
		getVendorPaymentsBySellerIDAndDateRangeStmt: q.getVendorPaymentsBySellerIDAndDateRangeStmt,
		getWalletByUserIDStmt:                       q.getWalletByUserIDStmt,
		incProductStockByIDStmt:                     q.incProductStockByIDStmt,
		retractSavingsFromWalletByUserIDStmt:        q.retractSavingsFromWalletByUserIDStmt,
		unblockUserByIDStmt:                         q.unblockUserByIDStmt,
		updateOrderTotalAmountStmt:                  q.updateOrderTotalAmountStmt,
		verifySellerByIDStmt:                        q.verifySellerByIDStmt,
		verifySellerEmailByIDStmt:                   q.verifySellerEmailByIDStmt,
		verifyUserByIDStmt:                          q.verifyUserByIDStmt,
	}
}
